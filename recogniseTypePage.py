#import the necessary libraries
import socket
import os
import subprocess
from scan.wpscaner import scanWP
from vulnerabilityScaners.AD.scanVulnsAD import ADreconAndEsploit
from vulnerabilityScaners.Node.dirMap import dirMapNode, gobusterMapDir, sqlmapFunction
from vulnerabilityScaners.wordpress.wordpressscan import scanVulnWordPress
#from pyad import *

def wordPressChecker(ip, webpage):
    #enumerate the wordpress
    scanWP(webpage)
    #Scan the web page vulnerabilities
    scanVulnWordPress(webpage,ip)
    print(ip)

def otherPage(ip, webpage):
    #test vulns
    sqlmapFunction(webpage)
    gobusterMapDir(webpage)

def activeDirectoryChecker(HOST,nameAD):
    #Create a socket object
    PORT=389

    #Get the active directory information
    # with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
    #     s.bind((HOST, PORT))
    #     s.listen(4)
    #     connexion, address=s.accept()
    #     with connexion:
    #         print(f"Conectado a {address}")
    #         info = connexion.recv(1024)
    #         while True:
    #             if not info:
    #                 print("No se ha recibido informaci√≥n del AD")
    #                 break
    #             connexion.sendall(info)

    #     #Parse the active directory information
    #     if 'Active Directory' in info.decode('utf-8'):
    #         print("La direccion Ip pertenece a un servidor Active Directory")
    #         nameAD=os.getenv('LOGONSERVER')
    #         print("El nombre del dominio es: ", nameAD)

    #     else:
    #         print("La direccion Ip NO pertenece a un servidor Active Directory")

    #     #Close the socket
    #     s.close()
    #enum & exploit
    ADreconAndEsploit(HOST, nameAD)


def nodePageChecker(ip, webpage):
    dirMapNode(webpage,ip)
    print("Scan Finish of node web: "+webpage+" ip: "+ip)
