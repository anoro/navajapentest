import scanless
import whatweb
import webanalyzer
import json
from passComand import codeFunction, passCommand, printReport

def whatweb(url):
    code='whatweb '+url
    codeFunction(code,'whatweb',url)

def serviceScan(domain):
    domain = 'http://www.'+domain
    # webanalyzer
    w = webanalyzer.WebAnalyzer()
    w.headers = {
        "User-Agent": "custom ua",
        "header-key": "header-value"
    }
    w.allow_redirect = True
    w.aggression = 0
    w.timeout = 30
    w.rule_dir = "rules"

    if w.update_rules():
        print("update rules successful")

    n = w.reload_rules()
    print("reload %d rules" % n)

    r = w.list_rules()
    print("list %d rules" % n)

    r = w.test_rule(domain, "./rules/wappalyzer/hexo.json")
    print(r)

    r = w.start(domain, reload=False)
    print("Result of whatweb: \n")
    json_data = json.dumps(r, indent=4)
    print(json_data)
    printReport(json_data,"service_raw",domain)

    # scan of the service with scanless: viewdns library
    scanlessFunction('viewdns',domain)
    
    #scanless: ipfingerprints library
    scanlessFunction('ipfingerprints',domain)
    
    #scanless: yougetsignal library
    scanlessFunction('yougetsignal',domain)
    
    #scanless: hackertarget library
    scanlessFunction('hackertarget',domain)
    
    #scanless: spiderip library
    scanlessFunction('spiderip',domain)
    
    #scanless: standingtech library
    scanlessFunction('standingtech',domain)

def scanlessFunction(typescaner,domain):
    sl = scanless.Scanless()

    print(domain + ' Services: \n')
    output = sl.scan(domain, scanner=typescaner)
    print(output['raw'])

    json_data2 = json.dumps(output['parsed'], indent=2)
    print(json_data2)
    printReport(json_data2,'service',domain)